1309. 解码字母到整数映射

题目描述

给你一个字符串 s，它由数字（'0' - '9'）和 '#' 组成。我们希望按下述规则将 s 映射为一些小写英文字符：

字符（'a' - 'i'）分别用（'1' - '9'）表示。
字符（'j' - 'z'）分别用（'10#' - '26#'）表示。 
返回映射之后形成的新字符串。

题目数据保证映射始终唯一。

示例 1：

输入：s = "10#11#12"
输出："jkab"
解释："j" -> "10#" , "k" -> "11#" , "a" -> "1" , "b" -> "2".
//首先判断字符是s[i+2]的位有没有元素，若有且为“#”则表示'j'到‘k’;
//否则其表示“0-9”，选出其字符到‘a’的相对位置
class Solution {
public:
    string freqAlphabets(string s) {
        string ans;
        for(int i = 0;i < s.size();i++)
        {
            //判断其属于'a'到'i',还是从'j'到'z'
            if(i + 2 < s.size() && s[i+2] == '#')
            {
                ans += (s[i] - '0') * 10 + (s[i+1] - '1') + 'a';
                i+=2;
            }
            else
            {
                ans += (s[i] - '1') + 'a';
            }
        }
        return ans;
    }
};
